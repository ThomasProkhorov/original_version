@{
    ViewBag.Title = RP.T("Admin.Views.ShopComment.Index.Title");
    Layout = "~/Areas/Admin/Views/Shared/_LayoutNoTree.cshtml";
}

<h2>@RP.T("Admin.Views.ShopComment.Index.Title")</h2>

<div id="ShopCommentgrid"></div>


<script>

    var ShopCommentgridFiltering = {
        filter: function (id) {
            var data = { logic: "and", filters: [] };
            //{ field: "name", operator: "startswith", value: "Jane" }
            var grid = $("#ShopCommentgrid").data('kendoGrid');
            //  console.log(grid.dataSource.options.schema.model);
            $('#' + id + ' input').each(function (i, e) {
                if ($(e).attr('name') && $(e).val())
                {
                    var inpname = $(e).attr('name');
                    var objname = inpname.split(".")[0];
                    if(objname in grid.dataSource.options.schema.model.fields)
                    {

                        var model = grid.dataSource.options.schema.model.fields[objname];
                        if(model.type == 'number' || model.type == 'object'){
                            if($(e).attr('data-zero') && $(e).val() < 1)
                            {
                                return;
                            }
                        }
                        var operator = 'eq';
                        if(model.type == 'date'){
                            operator = 'gt'; // >
                            var todate = $('#' + id + ' input[name="'+inpname+'_dateto"]');
                            if(todate.length >0)
                            {
                                data.filters.push({ field: $(e).attr('name'), operator: 'lte', value: model.parse(todate.val()) });
                            }
                        }
                        if(model.type == 'string'){
                            operator = 'startswith'; // .startswith
                        }
                        //lte <=
                        //  console.log(model);
                        var parseVal = $(e).val();
                        if(model.type != 'object')
                        {
                            parseVal =model.parse(parseVal);
                        }
                        data.filters.push({ field: $(e).attr('name'), operator: operator, value: parseVal });
                    }

                }
            });

            grid.dataSource.filter(data);

        },
        clear: function () {
            var grid = $("#ShopCommentgrid").data('kendoGrid');
            grid.dataSource.filter({});
        },
        setFilter: function (name, value) {
            var grid = $("#ShopCommentgrid").data('kendoGrid');
            grid.dataSource.filter({ field: name, operator: "eq", value: value });
            //grid.dataSource.page(1);
            // alert(name + value);
        },
    };

    function IntToTime(i) {
        var hr = Math.floor(i / 60);
        var mn = i % 60 ; if(mn<10){mn='0'+mn;}
        //  var part ="AM";
        // if(hr>12)
        //  {
        //    hr-=12;
        //     part="PM";
        // }
        // if(hr == 0){hr = 12;}
        var time = hr + ":" + mn;// + " " + part;
        return time;
    }
    $(document).ready(function () {
        /*
        Docs
        http://docs.telerik.com/kendo-ui/api/javascript/ui/grid
        */
        var gridLocal = function(){
            if('messages' in kendo.ui.Grid.prototype.options){
                return  kendo.ui.Grid.prototype.options.messages.commands.create;
            }else{
                return "Add new";
            }
        }
        $("#ShopCommentgrid").kendoGrid({
            dataSource: {

                type: "json",
                transport: {
                    "prefix": "",
                    read: {
                        url: "/Admin/Manage/ShopComment/_AjaxRead",
                        type: "POST",
                        dataType: "json",
                        // data: { filter:'ID~eq~3'  }
                    },
 
                    "update": {
                        "url": "/Admin/Manage/ShopComment/_AjaxUpdate"
                    },
                                                              
                    "destroy": {
                        "url": "/Admin/Manage/ShopComment/_AjaxDelete"
                    },
                                     },

                schema: {
                    data: "Data",
                    total: "Total",
                    errors: "Errors",
                    model: {
                        "id": "ID",
                        fields: {
  "ID": { "type": "number" ,defaultValue: 0,editable: false,}, 
  "UserID": { "type": "string",defaultValue: "00000000-0000-0000-0000-000000000000" }, 
  "ShopID": { "type": "number" ,defaultValue: 0}, 
  "ParentID": { "type": "number" ,defaultValue: 0}, 
  "Title": { "type": "string"  }, 
  "Text": { "type": "string"  }, 
  "Approved": { "type": "boolean"  }, 
  "CreateTime": { "type": "date"  }, 
  "UserName": { "type": "string"  }, 
                            // "ID": {"type":"number" ,editable: false}
                        }

                    }
                },
                requestEnd: function(e) {
                    if($('#ShopCommentgride-checkall').length > 0)
                    {
                        $('#ShopCommentgride-checkall')[0].checked = false;
                    }
                },
                pageSize: 20,
                "error": error_handler,
                "sync":function(e){ this.read(); },
                "serverPaging": true,
                "serverSorting": true,
                "serverFiltering": true,
                "serverGrouping": true,
                "serverAggregates": true,
                                 "filter": [], 
                "type": "aspnetmvc-ajax",

                sort: [],
            },
            refresh: true,
            //  detailTemplate: kendo.template($("#template").html()),
            // detailInit: detailInit,
            // dataBound: function () {
            //this.expandRow(this.tbody.find("tr.k-master-row").first());
            //   },
            pageable: {
                refresh: true,
                pageSize: 10
            },

            columns: [
{ field: "ID",title: "ID", sortable: false,filterable: false,editor:'<input data-val="true" data-val-number="The field ID must be a number." data-val-required="The ID field is required." id="ID" name="ID" type="hidden" value="0" /><span class="field-validation-valid" data-valmsg-for="ID" data-valmsg-replace="true"></span>', },
{ field: "UserID",title: "UserID", sortable: false,filterable: false,hidden: true, editor:'<input data-val="true" data-val-required="The UserID field is required." id="UserID" name="UserID" type="hidden" value="00000000-0000-0000-0000-000000000000" /><span class="field-validation-valid" data-valmsg-for="UserID" data-valmsg-replace="true"></span>', },
{ field: "ShopID",title: "ShopID", sortable: false,filterable: false,hidden: true, editor:'<input data-val="true" data-val-number="The field ShopID must be a number." data-val-required="The ShopID field is required." id="ShopID" name="ShopID" type="number" value="0" /><script> \
	jQuery(function(){jQuery("#ShopID").kendoNumericTextBox({"format":"n0","decimals":0});}); \
</sc'+'ript> \
<span class="field-validation-valid" data-valmsg-for="ShopID" data-valmsg-replace="true"></span>', },
{ field: "ParentID",title: "ParentID", sortable: false,filterable: false,hidden: true, editor:'<input data-val="true" data-val-number="The field ParentID must be a number." data-val-required="The ParentID field is required." id="ParentID" name="ParentID" type="number" value="0" /><script> \
	jQuery(function(){jQuery("#ParentID").kendoNumericTextBox({"format":"n0","decimals":0});}); \
</sc'+'ript> \
<span class="field-validation-valid" data-valmsg-for="ParentID" data-valmsg-replace="true"></span>', },
{ field: "Title",title: "כותרת", sortable: false,filterable: {cell: {showOperators: true}},editor:'     \
    <script> \
	jQuery(function(){jQuery("#TabStrip").kendoTabStrip({"animation":false});}); \
</sc'+'ript> \
     \
<span class="field-validation-valid" data-valmsg-for="Title" data-valmsg-replace="true"></span>', },
{ field: "Text",title: "טקסט", sortable: false,filterable: {cell: {showOperators: true}},editor:'<textarea class="text-box multi-line k-textbox" id="Text" name="Text"> \
</textarea> \
<span class="field-validation-valid" data-valmsg-for="Text" data-valmsg-replace="true"></span>', },
{ field: "Approved",title: "אושר", sortable: false,filterable: {cell: {showOperators: true}},editor:'<input class="check-box" data-val="true" data-val-required="The אושר field is required." id="Approved" name="Approved" type="checkbox" value="true" /><input name="Approved" type="hidden" value="false" /><span class="field-validation-valid" data-valmsg-for="Approved" data-valmsg-replace="true"></span>', },
{ field: "CreateTime",title: "תאריך יצירה" ,format: "{0: dd/MM/yyyy HH:mm}", sortable: false,filterable: false,editor:'<input data-val="true" data-val-date="The field תאריך יצירה must be a date." data-val-required="The תאריך יצירה field is required." id="CreateTime" name="CreateTime" type="datetime" value="1/1/0001 00:00" /><script> \
	jQuery(function(){jQuery("#CreateTime").kendoDateTimePicker({"format":"d/M/yyyy HH:mm","timeFormat":"HH:mm","min":new Date(1900,0,1,0,0,0,0),"max":new Date(2099,11,31,0,0,0,0),"interval":30});}); \
</sc'+'ript><span class="field-validation-valid" data-valmsg-for="CreateTime" data-valmsg-replace="true"></span>',},
{ field: "UserName",title: "שם משתמש", sortable: false,filterable: {cell: {showOperators: true}},editor:'<input class="k-textbox" id="UserName" name="UserName" type="text" value="" /><span class="field-validation-valid" data-valmsg-for="UserName" data-valmsg-replace="true"></span>', },





{
    "width": "100px",
    "template": "# if(!Approved) { # "
+"<a class=\"k-button\" onclick=\"shopcommentApi.Approv(#= ID #);\">אשר</a> # } #"
},


{
    "width": "190px",
    "buttonType": "Image",
    "command": [

      {  "name": "edit",
          "buttonType": "Icon",
          "text": "עריכה"
      },


{
    "name": "destroy",
    "buttonType": "Image",
    "text": "מחיקה"
},

    ]
},

            ],
            //   height: 600,
            "scrollable": false,
            filterable:true,
            sortable: true,
            "editable": {
                "confirmation": "האם אתה בטוח?",
                "confirmDelete": "מחיקה",
                "cancelDelete": "בטל",
                "mode": "inline",
                "create": true,
                "update": true,
                "destroy": true
            },



        });
        var ShopCommentgrid = $("#ShopCommentgrid").data('kendoGrid');
        ShopCommentgrid.dataSource.transport.parameterMap = function(data,type){

            // console.log(type);
            if(type != "read")
            {
                for(var i in data)
                {
                    //console.log(Object.prototype.toString.call( data[i] ));
                    if( Object.prototype.toString.call( data[i] ) === '[object Object]' ) {
                        delete data[i];
                    }
                    if( Object.prototype.toString.call( data[i] ) === '[object Array]' ) {
                        delete data[i];
                    }
                    if( Object.prototype.toString.call( data[i] ) === '[object Date]' ) {
                        data[i] = kendo.toString(kendo.parseDate(data[i]), "G");// Date.parse(data[i]);
                    }
                    //if(i == 'UserID' && !data[i]){
                    //    data[i]=
                    // }
                    //@ViewBag.AdditionalFilterField", operator: "eq", value: ''
                }
            }

            kendo.data.transports["aspnetmvc-ajax"](data);
            data = new kendo.data.transports["aspnetmvc-ajax"]({ prefix: "" }).parameterMap(data, type);
            //  console.log(data);
            return data;
        }

        function error_handler(e) {

            if (e.errors) {
                e.preventDefault();   // cancel grid rebind if error occurs
                var message = "Errors:\n";
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                            message += this + "\n";
                        });
                    }
                });
                alert(message);
            }
        }
        function detailInit(e) {
            var detailRow = e.detailRow;
            console.log(e);


        }

    });

</script>






<script>
    var shopcommentApi = {
        Approv: function (id) {
           var grid = $("#ShopCommentgrid").data('kendoGrid');
            var data = grid.dataSource.get(id);
            data.set('Approved', true);
            grid.saveRow();
            grid.saveChanges();
        }
    };

</script>
